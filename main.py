import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import F

TOKEN = os.getenv("BOT_TOKEN") or "–í–ê–®_–¢–û–ö–ï–ù_–¢–£–¢"

logging.basicConfig(level=logging.INFO)
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("–ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="support"),
        InlineKeyboardButton("–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è", callback_data="rehab"),
        InlineKeyboardButton("–ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="legal"),
        InlineKeyboardButton("–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞", callback_data="financial"),
        InlineKeyboardButton("–î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏", callback_data="programs")
    )
    await message.answer("–í—ñ—Ç–∞—é! –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª üëá", reply_markup=keyboard)

# –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞
@dp.callback_query_handler(lambda c: c.data == "support")
async def moral_support(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await bot.send_message(callback_query.from_user.id,
        "üß† –¶–µ–Ω—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º:"

        "https://mva.gov.ua/pidtrimka-veteraniv-ta-chleniv-rodin"


        "üìû –ì–∞—Ä—è—á–∞ –ª—ñ–Ω—ñ—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏: 0 800 33 92 91"
    )

# –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è
@dp.callback_query_handler(lambda c: c.data == "rehab")
async def rehab(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await bot.send_message(
    callback_query.from_user.id,
    "üß† –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è:\n"
    "üîπ –ü—Ä–æ—Ç–µ–∑—É–≤–∞–Ω–Ω—è: https://mva.gov.ua/rehabilitaciya-ta-protezuvannya\n"
    "üîπ –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ —Ü–µ–Ω—Ç—Ä–∏: https://mva.gov.ua/dlya-veteraniv/rehabilitaciyni-zakladi\n"
    "üîπ –ü—Ä–æ–≥—Ä–∞–º–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏: https://mva.gov.ua/diyalnist/rehabilitaciya"
)

    
# –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞
@dp.callback_query_handler(lambda c: c.data == "legal")
async def legal_support(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await bot.send_message(callback_query.from_user.id,
        "‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞:"

        "1. –ü—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –ú–°–ï–ö: https://mva.gov.ua/diyalnist/mediko-socialna-ekspertiza"

        "2. –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–µ–Ω—Å—ñ—ó: https://mva.gov.ua/pitannya-pensijnogo-zabezpechennya"

        "3. –°—Ç–∞—Ç—É—Å —ñ–Ω–≤–∞–ª—ñ–¥–∞ –≤—ñ–π–Ω–∏: https://mva.gov.ua/dokumenty-ta-statusy"
    )

# –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞
@dp.callback_query_handler(lambda c: c.data == "financial")
async def financial_aid(callback_query: types.CallbackQuery):
    await callback_query.answer()
    contacts = [
        "üèõ –î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω: –Ü–≤–∞–Ω–µ–Ω–∫–æ –û.–û. ‚Äì 099 123 45 67",
        "üèõ –ö–∞–º‚Äô—è–Ω—Å—å–∫–∏–π —Ä–∞–π–æ–Ω: –ü–µ—Ç—Ä–µ–Ω–∫–æ –Ü.–Ü. ‚Äì 098 765 43 21"
    ]
    await bot.send_message(callback_query.from_user.id,
        "üí∏ –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞ –≤—ñ–¥ –º—ñ—Å—Ü–µ–≤–æ—ó –≤–ª–∞–¥–∏:"
        "‚úÖ –©–æ—Ä—ñ—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º (–≤—ñ–¥ –º–µ—Ä—ñ–≤ —Ç–∞ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤)"
        "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://mva.gov.ua/pidtrimka/finansova"
   )     
# –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏
@dp.callback_query_handler(lambda c: c.data == "programs")
async def state_programs(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await bot.send_message(
    callback_query.from_user.id,
    (
        "üìú –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏:\n"
        "‚û§ –í—Å—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤: https://mva.gov.ua/programi\n"
        "‚û§ –Ñ-–í–µ—Ç–µ—Ä–∞–Ω: https://eveteran.gov.ua/"
    )
)



 
import asyncio

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())