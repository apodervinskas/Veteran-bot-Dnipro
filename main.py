import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from datetime import date
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row("üí¨ –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞", "‚ôø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è")
main_menu.row("‚öñ –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞", "üí∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞")
main_menu.row("üèõ –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏")

districts_keyboard = InlineKeyboardMarkup(row_width=2)
districts = {
    "dist_sobornyi": "–°–æ–±–æ—Ä–Ω–∏–π —Ä–∞–π–æ–Ω, –î–Ω—ñ–ø—Ä–æ",
    "dist_shevchenko": "–®–µ–≤—á–µ–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω, –î–Ω—ñ–ø—Ä–æ",
    "dist_krivyi": "–ú. –ö—Ä–∏–≤–∏–π –†—ñ–≥, –ú–µ—Ç–∞–ª—É—Ä–≥—ñ–π–Ω–∏–π —Ä–∞–π–æ–Ω",
    "dist_pavlograd": "–ú. –ü–∞–≤–ª–æ–≥—Ä–∞–¥",
    "dist_nikopol": "–ú. –ù—ñ–∫–æ–ø–æ–ª—å",
    "dist_kamianske": "–ú. –ö–∞–º‚Äô—è–Ω—Å—å–∫–µ"
}
for key, label in districts.items():
    districts_keyboard.insert(InlineKeyboardButton(label, callback_data=key))

deputies = {
    "dist_sobornyi": ["–Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤ ‚Äì +38 067 123 4567", "–û–ª–µ–Ω–∞ –ü–µ—Ç—Ä—ñ–≤–Ω–∞ ‚Äì +38 067 765 4321"],
    "dist_shevchenko": ["–ú–∞—Ä–∫–æ –¢–∞—Ä–∞—Å ‚Äì +38 067 111 2233"],
    "dist_krivyi": ["–ù–∞—Ç–∞–ª—è –ö–æ–≤–∞–ª—å ‚Äì +38 067 888 9900"],
    "dist_pavlograd": ["–ê–Ω–¥—Ä—ñ–π –°–µ–º–µ–Ω–æ–≤ ‚Äì +38 067 222 3344"],
    "dist_nikopol": ["–Ü—Ä–∏–Ω–∞ –°–∞–≤—á—É–∫ ‚Äì +38 067 555 6666"],
    "dist_kamianske": ["–í–∞—Å–∏–ª—å –õ–∏—Ç–≤–∏–Ω ‚Äì +38 067 333 4444"]
}

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    await message.answer("–í—ñ—Ç–∞—é! –Ø –±–æ—Ç –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤ –î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ üíôüíõ")
–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", reply_markup=main_menu)

@dp.message_handler(lambda m: m.text == "üí¨ –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def moral_support(message: types.Message):
    await message.answer(
        "ü´Ç –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞:
"
        "‚Ä¢ –¶–µ–Ω—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤ (–î–Ω—ñ–ø—Ä–æ): +38 067 123 45 67
"
        "‚Ä¢ Telegram‚Äë—á–∞—Ç –∑ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º: @dnipro_psy_support
"
        "‚Ä¢ [–ì—Ä–∞—Ñ—ñ–∫ –≥—Ä—É–ø –ø—ñ–¥—Ç—Ä–∏–º–∫–∏](https://dnipro-veterans.org)",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda m: m.text == "‚ôø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è")
async def rehab(message: types.Message):
    await message.answer(
        "‚ôø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è:
"
        "‚Ä¢ –ü—Ä–æ—Ç–µ–∑—É–≤–∞–Ω–Ω—è: https://mva.gov.ua/rehabilitation/protezuvannya
"
        "‚Ä¢ –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ —Ü–µ–Ω—Ç—Ä–∏: https://mva.gov.ua/rehabilitation/tsentri-reabilitaciyi
"
        "‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–∏ —Ä–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—ó: https://mva.gov.ua/rehabilitation/programi",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda m: m.text == "‚öñ –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def legal(message: types.Message):
    await message.answer(
        "‚öñ –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞:
"
        "‚Ä¢ –ü—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –ú–°–ï–ö: https://mva.gov.ua/prava/msek
"
        "‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–µ–Ω—Å—ñ—ó –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤: https://mva.gov.ua/prava/pensiyi
"
        "‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —ñ–Ω–≤–∞–ª—ñ–¥–∞ –≤—ñ–π–Ω–∏: https://mva.gov.ua/prava/status-ogd",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda m: m.text == "üí∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞")
async def ask_district(message: types.Message):
    await message.answer("üîπ –û–±–µ—Ä—ñ—Ç—å –≤–∞—à —Ä–∞–π–æ–Ω:", reply_markup=districts_keyboard)

@dp.callback_query_handler(lambda c: c.data.startswith("dist_"))
async def handle_district(c: types.CallbackQuery):
    name = districts[c.data]
    deps = deputies[c.data]
    fullname = c.from_user.full_name
    today = date.today().strftime("%d.%m.%Y")
    statement = (
        f"–ó–ê–Ø–í–ê

"
        f"–Ø, {fullname}, –≤–µ—Ç–µ—Ä–∞–Ω –≤—ñ–π–Ω–∏, –∑–≤–µ—Ä—Ç–∞—é—Å—è –¥–æ –í–∞—Å —è–∫ –¥–æ –¥–µ–ø—É—Ç–∞—Ç–∞ –≥—Ä–æ–º–∞–¥–∏ {name} "
        f"–∑ –ø—Ä–æ—Ö–∞–Ω–Ω—è–º –ø—Ä–æ —â–æ—Ä—ñ—á–Ω—É –º–∞—Ç–µ—Ä—ñ–∞–ª—å–Ω—É –¥–æ–ø–æ–º–æ–≥—É.

"
        f"–î–∞—Ç–∞: {today}
–ü—ñ–¥–ø–∏—Å: ____________"
    )
    await bot.send_message(c.from_user.id,
        f"üìã *–†–∞–π–æ–Ω:* {name}
"
        f"üë• *–í–∞—à—ñ –¥–µ–ø—É—Ç–∞—Ç–∏:*
‚Ä¢ " + "
‚Ä¢ ".join(deps),
        parse_mode=types.ParseMode.MARKDOWN)
    await bot.send_message(c.from_user.id,
        f"üìù *–®–∞–±–ª–æ–Ω –∑–∞—è–≤–∏:*
```{statement}```",
        parse_mode=types.ParseMode.MARKDOWN)

@dp.message_handler(lambda m: m.text == "üèõ –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏")
async def gov(message: types.Message):
    await message.answer(
        "üèõ –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –¥–∏–≤—ñ—Ç—å—Å—è —Ç—É—Ç:
"
        "https://mva.gov.ua/dopomoha/derzhavni-programi",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler()
async def unknown(message: types.Message):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:", reply_markup=main_menu)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)