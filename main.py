import logging
import os
from aiogram import Bot, Dispatcher, Router, types
from aiogram.enums import ParseMode
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("BOT_TOKEN") or "–í–ê–®_–¢–û–ö–ï–ù_–¢–£–¢"

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
router = Router()
dp.include_router(router)


# –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
@router.message(commands=['start'])
async def cmd_start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìò –î–æ–≤—ñ–¥–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", callback_data="info")],
        [InlineKeyboardButton(text="ü¶ø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è", callback_data="rehab")],
        [InlineKeyboardButton(text="‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="law")],
        [InlineKeyboardButton(text="üí∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞", callback_data="finance")],
        [InlineKeyboardButton(text="üë• –ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤", callback_data="contacts")],
        [InlineKeyboardButton(text="üèõÔ∏è –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏", callback_data="programs")],
    ])
    await message.answer("üëã –í—ñ—Ç–∞—é! –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", reply_markup=keyboard)


# –î–æ–≤—ñ–¥–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
@router.callback_query(lambda c: c.data == "info")
async def show_info(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "‚ÑπÔ∏è <b>–î–æ–≤—ñ–¥–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b>\n\n"
        "üìå –¢–µ–ª–µ—Ñ–æ–Ω –≥–∞—Ä—è—á–æ—ó –ª—ñ–Ω—ñ—ó –ú—ñ–Ω–≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤: 0-800-33-20-29\n"
        "üìå –ê–¥—Ä–µ—Å–∞: –ö–∏—ó–≤, –≤—É–ª. –õ–∏–ø—Å—å–∫–∞ 5\n"
        "üìå –°–∞–π—Ç: https://mva.gov.ua"
    )


# –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è
@router.callback_query(lambda c: c.data == "rehab")
async def show_rehab(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "ü¶ø <b>–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è</b>\n\n"
        "üîπ –ü—Ä–æ—Ç–µ–∑—É–≤–∞–Ω–Ω—è: https://mva.gov.ua/pages/protezuvannya\n"
        "üîπ –¶–µ–Ω—Ç—Ä–∏ —Ä–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—ó: https://mva.gov.ua/pages/reabilitaciyni-zakladi\n"
        "üîπ –ü—Ä–æ–≥—Ä–∞–º–∏: https://mva.gov.ua/pages/reabilitaciyni-programi"
    )


# –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞
@router.callback_query(lambda c: c.data == "law")
async def show_law(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "‚öñÔ∏è <b>–ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞</b>\n\n"
        "üî∏ –ü—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –ú–°–ï–ö: https://mva.gov.ua/pages/msek\n"
        "üî∏ –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–µ–Ω—Å—ñ—ó: https://mva.gov.ua/pages/pensii-veteranam\n"
        "üî∏ –°—Ç–∞—Ç—É—Å —ñ–Ω–≤–∞–ª—ñ–¥–∞ –≤—ñ–π–Ω–∏: https://mva.gov.ua/pages/status-invalidnosti"
    )


# –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞
@router.callback_query(lambda c: c.data == "finance")
async def show_finance(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "üí∞ <b>–§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞ –≤—ñ–¥ –º—ñ—Å—Ü–µ–≤–æ—ó –≤–ª–∞–¥–∏:</b>\n"
        "‚úÖ –©–æ—Ä—ñ—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º (–≤—ñ–¥ –º–µ—Ä—ñ–≤ —Ç–∞ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤)\n"
        "üîó –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ: https://mva.gov.ua/pidtrimka/finansova"
    )


# –ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤
@router.callback_query(lambda c: c.data == "contacts")
async def show_contacts(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "üë• <b>–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤ –î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ:</b>\n"
        "üìç –°–ø–∏—Å–æ–∫ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤: https://dniprorada.gov.ua/structure/deputies"
    )


# –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏
@router.callback_query(lambda c: c.data == "programs")
async def show_programs(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.answer(
        "üèõÔ∏è <b>–î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏:</b>\n"
        "üìé –í—Å—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤: https://mva.gov.ua/programi\n"
        "üìé –µ-–í–µ—Ç–µ—Ä–∞–Ω: https://eveteran.gov.ua/"
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    import asyncio

    async def main():
        await dp.start_polling(bot)

    asyncio.run(main())


if __name__ == "__main__":
    if not TOKEN or TOKEN == "–í–ê–®_–¢–û–ö–ï–ù_–¢–£–¢":
        raise ValueError("‚ùå BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É .env –∞–±–æ Render Secret")
    import asyncio
    asyncio.run(dp.start_polling(bot))
