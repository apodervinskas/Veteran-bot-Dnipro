from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging
import os

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(KeyboardButton("üí¨ –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"))
main_menu.add(KeyboardButton("‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"))
main_menu.add(KeyboardButton("ü¶ø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è"))
main_menu.add(KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤"))

# –î–µ–ø—É—Ç–∞—Ç–∏ –ø–æ —Ä–∞–π–æ–Ω–∞—Ö
districts = {
    "dist_sobornyi": "–°–æ–±–æ—Ä–Ω–∏–π",
    "dist_shevchenko": "–®–µ–≤—á–µ–Ω–∫—ñ–≤—Å—å–∫–∏–π",
    "dist_krivyi": "–ö—Ä–∏–≤–∏–π –†—ñ–≥",
    "dist_pavlograd": "–ü–∞–≤–ª–æ–≥—Ä–∞–¥",
    "dist_nikopol": "–ù—ñ–∫–æ–ø–æ–ª—å",
    "dist_kamianske": "–ö–∞–º‚Äô—è–Ω—Å—å–∫–µ"
}

districts_keyboard = InlineKeyboardMarkup(row_width=1)
for key, label in districts.items():
    districts_keyboard.insert(InlineKeyboardButton(label, callback_data=key))

deputies = {
    "dist_sobornyi": ["–Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤ ‚Äì +38 067 123 4567", "–û–ª–µ–Ω–∞ –ü–µ—Ç—Ä—ñ–≤–Ω–∞ ‚Äì +38 067 765 4321"],
    "dist_shevchenko": ["–ú–∞—Ä–∫–æ –¢–∞—Ä–∞—Å ‚Äì +38 067 111 2233"],
    "dist_krivyi": ["–ù–∞—Ç–∞–ª—è –ö–æ–ª–æ–º–∞—Ü—å–∫–∞ ‚Äì +38 067 388 9900"],
    "dist_pavlograd": ["–ê–Ω–¥—Ä—ñ–π –°–µ–º–µ–Ω–æ–≤ ‚Äì +38 067 222 3344"],
    "dist_nikopol": ["–Ü—Ä–∏–Ω–∞ –°–∞–≤—á—É–∫ ‚Äì +38 067 555 6666"],
    "dist_kamianske": ["–í–∞—Å–∏–ª—å –õ–∏—Ç–≤–∏–Ω ‚Äì +38 067 333 4444"]
}

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    await message.answer("–í—ñ—Ç–∞—é! –Ø –±–æ—Ç –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤ –î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ ‚ô°‚ô° –û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", reply_markup=main_menu)

@dp.message_handler(lambda m: m.text == "üí¨ –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def moral_support(message: types.Message):
    await message.answer("üí¨ –¶–µ–Ω—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤ (–î–Ω—ñ–ø—Ä–æ): +38 067 123 45 67")

@dp.message_handler(lambda m: m.text == "‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def legal_support(message: types.Message):
    await message.answer("‚öñÔ∏è –ù–∞–ø—Ä—è–º–∏ –ø—Ä–∞–≤–æ–≤–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:")

("1. –ü—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –ú–°–ï–ö")
("2. –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–µ–Ω—Å—ñ—ó")
("3. –°—Ç–∞—Ç—É—Å —ñ–Ω–≤–∞–ª—ñ–¥–∞ –≤—ñ–π–Ω–∏")

@dp.message_handler(lambda m: m.text == "ü¶ø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è")
async def rehabilitation(message: types.Message):
    await message.answer("‚è± –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤:\n\nüëâ –ü—Ä–æ—Ç–µ–∑—É–≤–∞–Ω–Ω—è\nüëâ –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ —Ü–µ–Ω—Ç—Ä–∏\nüëâ –ü—Ä–æ–≥—Ä–∞–º–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏")


@dp.message_handler(lambda m: m.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤")
async def contact_deputies(message: types.Message):
    await message.answer("üìç –û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ–π —Ä–∞–π–æ–Ω:", reply_markup=districts_keyboard)

@dp.callback_query_handler(lambda c: c.data in deputies)
async def send_contacts(callback_query: types.CallbackQuery):
    district = callback_query.data
    contacts = deputies[district]
    await bot.send_message(callback_query.from_user.id, f"–ö–æ–Ω—Ç–∞–∫—Ç–∏ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤ —É —Ä–∞–π–æ–Ω—ñ:\n{some_variable}")

".join(contacts))

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
