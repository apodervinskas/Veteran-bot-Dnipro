import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher.filters import Command
from aiogram.types.message import Message
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(
    KeyboardButton("üí¨ –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"),
    KeyboardButton("‚ôø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è"),
    KeyboardButton("‚öñ –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"),
)
main_menu.add(
    KeyboardButton("üí∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞"),
    KeyboardButton("üìã –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏")
)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer(
        "–í—ñ—Ç–∞—é! –Ø –±–æ—Ç –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤ –î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ üíôüíõ\n–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=main_menu
    )

@dp.message_handler(lambda message: message.text == "üí¨ –ú–æ—Ä–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def moral_support(message: types.Message):
    await message.answer(
        "üìû –¶–µ–Ω—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤:
"
        "‚Ä¢ –º. –î–Ω—ñ–ø—Ä–æ: +38 067 123 45 67
"
        "‚Ä¢ –º. –ö—Ä–∏–≤–∏–π –†—ñ–≥: +38 099 222 33 44
"
        "‚Ä¢ Telegram‚Äë—á–∞—Ç –∑ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º: @dnipro_psy_support
"
        "‚Ä¢ [–ì—Ä–∞—Ñ—ñ–∫ –≥—Ä—É–ø –ø—ñ–¥—Ç—Ä–∏–º–∫–∏](https://dnipro-veterans.org)",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda message: message.text == "‚ôø –†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è")
async def rehab(message: types.Message):
    await message.answer(
        "‚ôø *–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—è:*
"
        "‚Ä¢ [–ü—Ä–æ—Ç–µ–∑—É–≤–∞–Ω–Ω—è](https://mva.gov.ua/rehabilitation/protezuvannya)
"
        "‚Ä¢ [–†–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ–π–Ω—ñ —Ü–µ–Ω—Ç—Ä–∏](https://mva.gov.ua/rehabilitation/tsentri-reabilitaciyi)
"
        "‚Ä¢ [–ü—Ä–æ–≥—Ä–∞–º–∏ —Ä–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—ó](https://mva.gov.ua/rehabilitation/programi)",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda message: message.text == "‚öñ –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def legal_support(message: types.Message):
    await message.answer(
        "‚öñ *–ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞:*
"
        "‚Ä¢ [–ü—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –ú–°–ï–ö](https://mva.gov.ua/prava/msek)
"
        "‚Ä¢ [–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø–µ–Ω—Å—ñ—ó –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤](https://mva.gov.ua/prava/pensiyi)
"
        "‚Ä¢ [–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —ñ–Ω–≤–∞–ª—ñ–¥–∞ –≤—ñ–π–Ω–∏](https://mva.gov.ua/prava/status-ogd)",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda message: message.text == "üìã –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏")
async def programs(message: types.Message):
    await message.answer(
        "üìã –î–µ—Ä–∂–∞–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –¥–∏–≤—ñ—Ç—å—Å—è —Ç—É—Ç:
"
        "https://mva.gov.ua/dopomoha/derzhavni-programi",
        parse_mode=types.ParseMode.MARKDOWN
    )

@dp.message_handler(lambda message: message.text == "üí∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞")
async def financial(message: types.Message):
    await message.answer(
        "üí∞ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —â–æ—Ä—ñ—á–Ω—É –¥–æ–ø–æ–º–æ–≥—É –≤—ñ–¥ –º–µ—Ä—ñ–≤ —Ç–∞ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤ –ø–æ —Ä–∞–π–æ–Ω–∞—Ö –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏, –æ–±—Ä–∞–≤—à–∏ —Ä–∞–π–æ–Ω.",
        reply_markup=main_menu
    )

@dp.message_handler()
async def fallback(message: types.Message):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:", reply_markup=main_menu)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)